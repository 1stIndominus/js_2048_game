{"version":3,"sources":["scripts/main.js"],"names":["board","rows","columns","score","document","querySelector","cell","querySelectorAll","button","winMessage","loseMessage","startMessage","setGame","i","r","c","id","num","updateTile","setRandom","addEventListener","handler","hasEmptyTile","isFound","Math","floor","random","tile","getElementById","innerText","classList","add","value","textContent","remove","e","code","slideLeftAndRight","slideUpAndDown","lose","win","filterZero","row","filter","slide","newRow","length","push","left","reverse","up","removeEventListener"],"mappings":"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","file":"main.7f8b7e4e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet board;\nconst rows = 4;\nconst columns = 4;\nconst score = document.querySelector('.game-score');\nconst cell = document.querySelectorAll('.field-cell');\nconst button = document.querySelector('.button');\n\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\nconst startMessage = document.querySelector('.message-start');\n\nbutton.addEventListener('click', () => {\n  if (button.textContent === 'Start') {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n  } else {\n    button.classList.remove('restart');\n    button.classList.add('start');\n    button.textContent = 'Start';\n  }\n\n  score.textContent = '0';\n  startMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n  startMessage.classList.add('hidden');\n\n  setGame();\n});\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  let i = 0;\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      cell[i].id = `${r}-${c}`;\n\n      const num = board[r][c];\n\n      updateTile(cell[i], num);\n      i++;\n    }\n  }\n\n  setRandom();\n  setRandom();\n  document.addEventListener('keyup', handler);\n}\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction setRandom() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let isFound = false;\n\n  while (!isFound) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      board[r][c] = Math.random() < 0.1 ? 4 : 2;\n\n      const tile = document.getElementById(`${r}-${c}`);\n\n      tile.innerText = '2';\n      tile.classList.add('field-cell--2');\n      isFound = true;\n    }\n  }\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = '';\n  tile.classList.add('field-cell');\n\n  if (num > 0) {\n    tile.innerText = num;\n    tile.classList.add(`field-cell--${num}`);\n  }\n}\n\nconst handler = (e) => {\n  switch (e.code) {\n    case 'ArrowLeft': {\n      slideLeftAndRight(true);\n      setRandom();\n\n      break;\n    }\n\n    case 'ArrowRight': {\n      slideLeftAndRight(false);\n      setRandom();\n\n      break;\n    }\n\n    case 'ArrowUp': {\n      slideUpAndDown(true);\n      setRandom();\n\n      break;\n    }\n\n    case 'ArrowDown': {\n      slideUpAndDown(false);\n      setRandom();\n\n      break;\n    }\n  }\n\n  lose();\n  win();\n};\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let newRow = filterZero(row);\n\n  for (let i = 0; i < newRow.length; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score.textContent = `${+score.textContent + newRow[i]}`;\n    }\n  }\n\n  newRow = filterZero(newRow);\n\n  while (newRow.length < columns) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction slideLeftAndRight(left) {\n  for (let i = 0; i < rows; i++) {\n    let row = board[i];\n\n    if (left) {\n      row = slide(row);\n      board[i] = row;\n    } else {\n      row.reverse();\n      row = slide(row);\n      row.reverse();\n      board[i] = row;\n    }\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(`${i}-${c}`);\n      const num = board[i][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nconst slideUpAndDown = (up) => {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c],\n      board[1][c],\n      board[2][c],\n      board[3][c]];\n\n    if (up) {\n      row = slide(row);\n    } else {\n      row.reverse();\n      row = slide(row);\n      row.reverse();\n    }\n\n    for (let r = 0; r < columns; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(`${r}-${c}`);\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n};\n\nfunction lose() {\n  if (hasEmptyTile()) {\n    return;\n  }\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns - 1; c++) {\n      if (board[c][r] === board[c + 1][r]\n        || board[r][c] === board[r][c + 1]) {\n        loseMessage.classList.remove('hidden');\n        document.removeEventListener('keyup', handler);\n      }\n    }\n  }\n}\n\nfunction win() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 2048) {\n        winMessage.classList.remove('hidden');\n      }\n    }\n  }\n}\n"]}